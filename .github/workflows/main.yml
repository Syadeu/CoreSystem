name: CoreSystem Release Action
on: 
    push:
        branches: [main]
jobs:
  activation:
    runs-on: ubuntu-latest
    steps:
          # Request manual activation file
        - name: Request manual activation file
          id: getManualLicenseFile
          uses: game-ci/unity-request-activation-file@v2
          
          # Upload artifact (Unity_v20XX.X.XXXX.alf)
        - name: Expose as artifact
          uses: actions/upload-artifact@v1
          with:
            name: ${{ steps.getManualLicenseFile.outputs.filePath }}
            path: ${{ steps.getManualLicenseFile.outputs.filePath }}
    
  start:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            unityVersion:
                - 2020.2.6f1
            targetPlatform:
                - StandaloneWindows64
    steps:
      # Check Out
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
            fetch-depth: 0
            lfs: true

      # Test
      - name: Run tests
        id: testRunner
        uses: game-ci/unity-test-runner@v2
        env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
            projectPath: ${{ matrix.projectPath }}
            unityVersion: ${{ matrix.unityVersion }}
            githubToken: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Save Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
            name: Test Results
            path: ${{ steps.testRunner.outputs.artifactsPath }}

  build:
    needs: start
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
            - 2020.2.6f1
        targetPlatform:
            - StandaloneWindows64
    steps:
      # Activate Unity License
      - name: Unity - Activate
        uses: game-ci/unity-activate@v1.3
        env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
